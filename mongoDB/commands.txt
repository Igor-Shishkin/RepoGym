show dbs;
use cooker;
show collections;
db.getName();

mongoimport --db=cooker --jsonArray recipes.json

use cooker
doc = {"title": "Tacos", "desc": "YUmmie tacos", cook_time: 20};
db.tacos.insertOne(doc);

db.tacos.find().pretty();
db.recipes.find({"title" : "Tacos", "cook_time" : 20}).pretty();
db.recipes.find({"title" : "Tacos"}, {"title":1, "desc":1}).pretty();
db.recipes.find({}, {"title":1, "desc":1}).pretty();
db.recipes.find({}, {"title":1}).limit(3).pretty();
db.recipes.find({}, {"title" : 1}).sort({"title" : 1});
db.recipes.find({}, {"title" : 1}).sort({"title" : 1}).skip(3).limit(2);

db.recipes.find({"cook_time" : {$lte : 30}}, {"title" : 1, cook_time : 1});
db.recipes.find({"cook_time" : {$lte : 30}, "prep_time" : {$lte : 10}}, {"title" : 1, "cook_time" : 1, "prep_time" : 1});
db.recipes.find({$or : [{"cook_time" : {$lte : 30}}, {"prep_time" : {$lte : 10}}] }, {"title" : 1, "cook_time" : 1, "prep_time" : 1}); - <
db.recipes.find({ "tags" : { $all : ["easy", "mexican"]}}, {"title" : 1, "tags" : 1}) - &&
db.recipes.find({ "tags" : { $in : ["easy", "mexican"]}}, {"title" : 1, "tags" : 1}) - ||
db.recipes.find({ "tags" : { $in : ["easy", "mexican"]}}, {"title" : 1, "tags" : 1}) - submerge in array


var myCursor = db.recipes.find({"title": { $regex: /taco/i }}, {"title":1}).pretty();
myCursor
while(myCursor.hasNext()){print(tojson(myCursor.next()));} -??
myCursor.forEach(printjson);



db.examples.updateOne({"title" : "Pizza"}, { $set: {"title": "thin crust pizza"}}); //update
db.examples.updateOne({"title" : "thin crust pizza"}, { $set: {"vegan": false}}); //create a field
db.examples.updateOne({"title" : "thin crust pizza"}, { $unset: {"vegan": 1}}); //delete field
db.examples.updateOne({"title": "Tacos"}, { $inc: { "likes_count": 3}}); //increment
db.examples.updateOne({"title": "Tacos"}, { $inc: { "likes_count": -13}}); //increment
db.examples.updateOne({"title": "Tacos"}, { $push: {"likes": 60}}); //add an element to array
db.examples.updateOne({"title": "Tacos"}, { $pull: {"likes": 60}}); //delete an element from array
db.examples.deleteOne({"_id": ObjectId("5ee69e393260aab97ea0d58e")}); //delete object


const y = db.recipes.find({}, {title: 1, prep_time: 1, _id: 0}).toArray();
console.table(y);


